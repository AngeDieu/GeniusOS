#include <ion/keyboard/layout_events.h>

namespace Ion {
namespace Events {

// TODO factorize in header without creating conflicts with template named T
#define TL() EventData::Textless()
#define U() EventData::Undefined()
#define T(x) EventData::Text(x)

static_assert('\x11' == UCodePointEmpty, "Unicode error");
const EventData s_dataForEvent[Event::k_specialEventsOffset] = {
    // Plain
    TL(),
    TL(),
    TL(),
    TL(),
    TL(),
    TL(),
    TL(),
    U(),
    TL(),
    U(),
    U(),
    U(),
    TL(),
    TL(),
    TL(),
    TL(),
    TL(),
    TL(),
    T("e^(\x11)"),
    T("ln(\x11)"),
    T("log(\x11)"),
    T("i"),
    T(","),
    T("^"),
    T("sin(\x11)"),
    T("cos(\x11)"),
    T("tan(\x11)"),
    T("π"),
    T("√(\x11)"),
    T("^2"),
    T("7"),
    T("8"),
    T("9"),
    T("("),
    T(")"),
    U(),
    T("4"),
    T("5"),
    T("6"),
    T("×"),
    T("/"),
    U(),
    T("1"),
    T("2"),
    T("3"),
    T("+"),
    T("-"),
    U(),
    T("0"),
    T("."),
    T("ᴇ"),
    TL(),
    TL(),
    U(),
    // Shift
    TL(),
    TL(),
    TL(),
    TL(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    TL(),
    TL(),
    TL(),
    TL(),
    T("["),
    T("]"),
    T("{"),
    T("}"),
    T("_"),
    TL(),
    T("arcsin(\x11)"),
    T("arccos(\x11)"),
    T("arctan(\x11)"),
    T("="),
    T("<"),
    T(">"),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    // Alpha
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    T(":"),
    T(";"),
    T("\""),
    T("%"),
    T("a"),
    T("b"),
    T("c"),
    T("d"),
    T("e"),
    T("f"),
    T("g"),
    T("h"),
    T("i"),
    T("j"),
    T("k"),
    T("l"),
    T("m"),
    T("n"),
    T("o"),
    T("p"),
    T("q"),
    U(),
    T("r"),
    T("s"),
    T("t"),
    T("u"),
    T("v"),
    U(),
    T("w"),
    T("x"),
    T("y"),
    T("z"),
    T(" "),
    U(),
    T("?"),
    T("!"),
    U(),
    U(),
    U(),
    U(),
    // Shift+Alpha
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    T("A"),
    T("B"),
    T("C"),
    T("D"),
    T("E"),
    T("F"),
    T("G"),
    T("H"),
    T("I"),
    T("J"),
    T("K"),
    T("L"),
    T("M"),
    T("N"),
    T("O"),
    T("P"),
    T("Q"),
    U(),
    T("R"),
    T("S"),
    T("T"),
    T("U"),
    T("V"),
    U(),
    T("W"),
    T("X"),
    T("Y"),
    T("Z"),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
    U(),
};

#if DEBUG

const char* const s_nameForEvent[255] = {
/* The names are in a dedicated file to be easy to parse from python */
#include "events_names.inc"
};

#endif

}  // namespace Events
}  // namespace Ion
